// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id          Int @id @default(autoincrement())
  name        String 
  email       String @unique
  password    String
  phonenumber String
  address     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  pesan       Pesan[]
}

model Product{
  id          Int @id @default(autoincrement())
  name        String
  price       Float
  image       String
  category    Category @relation(fields:[categoryId],references:[id])
  categoryId  Int
  pesanDetails PesanDetail[]
}

model Category{
  id          Int @id @default(autoincrement())
  name        String @unique
  products    Product[]
}

model Pesan {
  id          Int            @id @default(autoincrement())
  user        User?          @relation(fields: [userId], references: [id])
  userId      Int?           
  guestName   String?        
  guestPhone  String?
  address     String         
  totalPrice  Float          
  status      String         @default("Pending")
  createdAt   DateTime       @default(now())
  details     PesanDetail[]  // Relasi ke detail pesanan
}

model PesanDetail {
  id        Int     @id @default(autoincrement())
  pesan     Pesan   @relation(fields: [pesanId], references: [id])
  pesanId   Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  qty       Int
  price     Float // Simpan harga saat dipesan
}



